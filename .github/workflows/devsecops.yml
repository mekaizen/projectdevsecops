name: Security Scan Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Export SonarCloud Report to JSON
        run: |
          mkdir -p /tmp/security-reports
          curl -X GET -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/issues/search?componentKeys=mekaizen_projectdevsecops&types=BUG,VULNERABILITY,CODE_SMELL&ps=500" > /tmp/security-reports/sonar-report.json
          if ! jq empty /tmp/security-reports/sonar-report.json > /dev/null 2>&1; then
            echo "Error: Received invalid JSON from SonarCloud API"
            cat /tmp/security-reports/sonar-report.json
            exit 1
          fi

      - name: Convert JSON to HTML with Chart
        run: |
          {
            echo "<html><head><style>"
            echo "body { font-family: Arial, sans-serif; margin: 20px; }"
            echo "h2 { color: #4CAF50; }"
            echo "h3 { margin-top: 20px; }"
            echo "ul { list-style-type: none; padding: 0; }"
            echo "li { margin: 10px 0; padding: 8px; border: 1px solid #ddd; border-radius: 4px; }"
            echo ".severity-HIGH { color: #ff4d4d; font-weight: bold; }"
            echo ".severity-MEDIUM { color: #0066cc; }"
            echo ".severity-LOW { color: #666666; }"
            echo "</style><script src='https://cdn.jsdelivr.net/npm/chart.js'></script></head><body>"
            echo "<h2>SonarCloud Issues Report</h2>"
          } > /tmp/security-reports/sonar-report.html
          echo "<script>const issueData = {HIGH: 0, MEDIUM: 0, LOW: 0};</script>" >> /tmp/security-reports/sonar-report.html
          {
            echo "<h3>High Severity Issues</h3><ul>"
            jq -r '.issues[] | select(.severity == "BLOCKER" or .severity == "CRITICAL") | "<li class=\"severity-HIGH\">\(.message) - Severity: HIGH</li>"' /tmp/security-reports/sonar-report.json
            echo "</ul><h3>Medium Severity Issues</h3><ul>"
            jq -r '.issues[] | select(.severity == "MAJOR") | "<li class=\"severity-MEDIUM\">\(.message) - Severity: MEDIUM</li>"' /tmp/security-reports/sonar-report.json
            echo "</ul><h3>Low Severity Issues</h3><ul>"
            jq -r '.issues[] | select(.severity == "MINOR") | "<li class=\"severity-LOW\">\(.message) - Severity: LOW</li>"' /tmp/security-reports/sonar-report.json
            echo "</ul>"
          } >> /tmp/security-reports/sonar-report.html

      - name: Upload SonarCloud HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: sonar_report
          path: /tmp/security-reports/sonar-report.html

  zap_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: docker build -t my-python-app .

      - name: Start Application
        run: docker run -d --name my-app -p 8080:8080 my-python-app

      - name: Create Report Directory
        run: mkdir -p zap-reports && chmod 777 zap-reports

      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-r zap-reports/zap_report.html -J zap-reports/zap_out.json -w zap-reports/zap_report.md"
          docker_name: "ghcr.io/zaproxy/zaproxy:weekly"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v3
        with:
          name: zap_reports
          path: zap-reports

      - name: Stop Application
        run: docker stop my-app && docker rm my-app

  sca_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.1.1/dependency-check-7.1.1-release.zip
          unzip dependency-check-7.1.1-release.zip -d dependency-check
          chmod +x dependency-check/dependency-check/bin/dependency-check.sh

      - name: Run OWASP Dependency Check
        run: |
          mkdir -p /tmp/security-reports
          dependency-check/dependency-check/bin/dependency-check.sh --project "My Project SCA" \
          --scan $(pwd) --format "HTML" --out /tmp/security-reports/dependency-check-report.html

      - name: Upload Dependency Check Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: /tmp/security-reports/dependency-check-report.html

  combine_reports:
    runs-on: ubuntu-latest
    needs: [sonarcloud_scan, zap_scan, sca_scan]
    steps:
      - name: Download SonarQube Report
        uses: actions/download-artifact@v3
        with:
          name: sonar_report
          path: /tmp/security-reports

      - name: Download ZAP Report
        uses: actions/download-artifact@v3
        with:
          name: zap_reports
          path: zap-reports

      - name: Download Dependency Check Report
        uses: actions/download-artifact@v3
        with:
          name: dependency-check-report
          path: /tmp/security-reports

      - name: Generate Consolidated HTML Report
        run: |
          echo "<html><head><style>body { font-family: Arial, sans-serif; } h1, h2 { color: #4CAF50; }</style></head><body><h1>Consolidated Security Report</h1>" > /tmp/security-reports/consolidated-report.html

          if [[ -f "/tmp/security-reports/sonar-report.html" ]]; then
            echo "<h2>SonarQube SAST Report</h2>" >> /tmp/security-reports/consolidated-report.html
            cat /tmp/security-reports/sonar-report.html >> /tmp/security-reports/consolidated-report.html
          else
            echo "<p>SonarQube report not found!</p>" >> /tmp/security-reports/consolidated-report.html
          fi

          if [[ -f "zap-reports/zap_report.html" ]]; then
            echo "<h2>OWASP ZAP DAST Report</h2>" >> /tmp/security-reports/consolidated-report.html
            cat zap-reports/zap_report.html >> /tmp/security-reports/consolidated-report.html
          else
            echo "<p>ZAP report not found!</p>" >> /tmp/security-reports/consolidated-report.html
          fi

          if [[ -f "/tmp/security-reports/dependency-check-report.html" ]]; then
            echo "<h2>OWASP Dependency Check SCA Report</h2>" >> /tmp/security-reports/consolidated-report.html
            cat /tmp/security-reports/dependency-check-report.html >> /tmp/security-reports/consolidated-report.html
          else
            echo "<p>Dependency Check report not found!</p>" >> /tmp/security-reports/consolidated-report.html
          fi

          echo "</body></html>" >> /tmp/security-reports/consolidated-report.html

      - name: Upload Consolidated HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: consolidated-report
          path: /tmp/security-reports/consolidated-report.html
